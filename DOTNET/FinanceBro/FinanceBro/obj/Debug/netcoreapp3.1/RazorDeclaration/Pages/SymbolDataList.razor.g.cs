// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace FinanceBro.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "/Users/julianfrech/Documents/GitHub/CodeExampleFB/DOTNET/FinanceBro/FinanceBro/_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "/Users/julianfrech/Documents/GitHub/CodeExampleFB/DOTNET/FinanceBro/FinanceBro/_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "/Users/julianfrech/Documents/GitHub/CodeExampleFB/DOTNET/FinanceBro/FinanceBro/_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "/Users/julianfrech/Documents/GitHub/CodeExampleFB/DOTNET/FinanceBro/FinanceBro/_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "/Users/julianfrech/Documents/GitHub/CodeExampleFB/DOTNET/FinanceBro/FinanceBro/_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "/Users/julianfrech/Documents/GitHub/CodeExampleFB/DOTNET/FinanceBro/FinanceBro/_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "/Users/julianfrech/Documents/GitHub/CodeExampleFB/DOTNET/FinanceBro/FinanceBro/_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "/Users/julianfrech/Documents/GitHub/CodeExampleFB/DOTNET/FinanceBro/FinanceBro/_Imports.razor"
using FinanceBro;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "/Users/julianfrech/Documents/GitHub/CodeExampleFB/DOTNET/FinanceBro/FinanceBro/_Imports.razor"
using Blazorise;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "/Users/julianfrech/Documents/GitHub/CodeExampleFB/DOTNET/FinanceBro/FinanceBro/_Imports.razor"
using Blazorise.Charts;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "/Users/julianfrech/Documents/GitHub/CodeExampleFB/DOTNET/FinanceBro/FinanceBro/_Imports.razor"
using Blazorise.Components;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "/Users/julianfrech/Documents/GitHub/CodeExampleFB/DOTNET/FinanceBro/FinanceBro/_Imports.razor"
using FinanceBro.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 14 "/Users/julianfrech/Documents/GitHub/CodeExampleFB/DOTNET/FinanceBro/FinanceBro/_Imports.razor"
using BlazorTable;

#line default
#line hidden
#nullable disable
#nullable restore
#line 15 "/Users/julianfrech/Documents/GitHub/CodeExampleFB/DOTNET/FinanceBro/FinanceBro/_Imports.razor"
using Syncfusion.Blazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 16 "/Users/julianfrech/Documents/GitHub/CodeExampleFB/DOTNET/FinanceBro/FinanceBro/_Imports.razor"
using Syncfusion.Blazor.Layouts;

#line default
#line hidden
#nullable disable
#nullable restore
#line 17 "/Users/julianfrech/Documents/GitHub/CodeExampleFB/DOTNET/FinanceBro/FinanceBro/_Imports.razor"
using Syncfusion.Blazor.Maps;

#line default
#line hidden
#nullable disable
#nullable restore
#line 18 "/Users/julianfrech/Documents/GitHub/CodeExampleFB/DOTNET/FinanceBro/FinanceBro/_Imports.razor"
using Syncfusion.Blazor.Notifications;

#line default
#line hidden
#nullable disable
#nullable restore
#line 19 "/Users/julianfrech/Documents/GitHub/CodeExampleFB/DOTNET/FinanceBro/FinanceBro/_Imports.razor"
using Microsoft.Extensions.Logging;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "/Users/julianfrech/Documents/GitHub/CodeExampleFB/DOTNET/FinanceBro/FinanceBro/Pages/SymbolDataList.razor"
using FinanceBro.Data;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "/Users/julianfrech/Documents/GitHub/CodeExampleFB/DOTNET/FinanceBro/FinanceBro/Pages/SymbolDataList.razor"
using Blazorise.Icons.FontAwesome;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/symbolfacts")]
    public partial class SymbolDataList : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 55 "/Users/julianfrech/Documents/GitHub/CodeExampleFB/DOTNET/FinanceBro/FinanceBro/Pages/SymbolDataList.razor"
       


    List<SymbolFacts> symbolFactsList;
    SymbolFacts symbolFact;

    protected override async Task OnInitializedAsync()
    {
        symbolFactsList = await symbolservice.Get();
    }

    private string searchTerm;

    async Task SearchIssues()
    {
        symbolFact = await symbolservice.Get(searchTerm);
    }




#line default
#line hidden
#nullable disable
#nullable restore
#line 78 "/Users/julianfrech/Documents/GitHub/CodeExampleFB/DOTNET/FinanceBro/FinanceBro/Pages/SymbolDataList.razor"
           

    private bool IsSortedAscending;

    private string CurrentSortColumn;

    private void SortTable(string columnName)
    {
        //Sorting against a column that is not currently sorted against.
        if (columnName != CurrentSortColumn)
        {
            //We need to force order by ascending on the new column
            //This line uses reflection and will probably perform inefficiently in a production environment.
            symbolFactsList = symbolFactsList.OrderBy(x => x.GetType().GetProperty(columnName).GetValue(x, null)).ToList();
            CurrentSortColumn = columnName;
            IsSortedAscending = true;

        }
        else //Sorting against same column but in different direction
        {
            if (IsSortedAscending)
            {
                symbolFactsList = symbolFactsList.OrderByDescending(x => x.GetType().GetProperty(columnName).GetValue(x, null)).ToList();
            }
            else
            {
                symbolFactsList = symbolFactsList.OrderBy(x => x.GetType().GetProperty(columnName).GetValue(x, null)).ToList();
            }

            //Toggle this boolean
            IsSortedAscending = !IsSortedAscending;
        }
    }

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IJSRuntime jsRuntime { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private ISymbolFactsDataListService symbolservice { get; set; }
    }
}
#pragma warning restore 1591
