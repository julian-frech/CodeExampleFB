// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace FinanceBro.Pages
{
    #line hidden
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "/Users/julianfrech/Documents/GitHub/CodeExampleFB/DOTNET/FinanceBro/FinanceBro/_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "/Users/julianfrech/Documents/GitHub/CodeExampleFB/DOTNET/FinanceBro/FinanceBro/_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "/Users/julianfrech/Documents/GitHub/CodeExampleFB/DOTNET/FinanceBro/FinanceBro/_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "/Users/julianfrech/Documents/GitHub/CodeExampleFB/DOTNET/FinanceBro/FinanceBro/_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "/Users/julianfrech/Documents/GitHub/CodeExampleFB/DOTNET/FinanceBro/FinanceBro/_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "/Users/julianfrech/Documents/GitHub/CodeExampleFB/DOTNET/FinanceBro/FinanceBro/_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "/Users/julianfrech/Documents/GitHub/CodeExampleFB/DOTNET/FinanceBro/FinanceBro/_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "/Users/julianfrech/Documents/GitHub/CodeExampleFB/DOTNET/FinanceBro/FinanceBro/_Imports.razor"
using FinanceBro;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "/Users/julianfrech/Documents/GitHub/CodeExampleFB/DOTNET/FinanceBro/FinanceBro/_Imports.razor"
using Blazorise.Components;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "/Users/julianfrech/Documents/GitHub/CodeExampleFB/DOTNET/FinanceBro/FinanceBro/_Imports.razor"
using Blazorise.Icons.FontAwesome;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "/Users/julianfrech/Documents/GitHub/CodeExampleFB/DOTNET/FinanceBro/FinanceBro/_Imports.razor"
using FinanceBro.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 14 "/Users/julianfrech/Documents/GitHub/CodeExampleFB/DOTNET/FinanceBro/FinanceBro/_Imports.razor"
using BlazorTable;

#line default
#line hidden
#nullable disable
#nullable restore
#line 15 "/Users/julianfrech/Documents/GitHub/CodeExampleFB/DOTNET/FinanceBro/FinanceBro/_Imports.razor"
using Syncfusion.Blazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 16 "/Users/julianfrech/Documents/GitHub/CodeExampleFB/DOTNET/FinanceBro/FinanceBro/_Imports.razor"
using Syncfusion.Blazor.Layouts;

#line default
#line hidden
#nullable disable
#nullable restore
#line 17 "/Users/julianfrech/Documents/GitHub/CodeExampleFB/DOTNET/FinanceBro/FinanceBro/_Imports.razor"
using Syncfusion.Blazor.Maps;

#line default
#line hidden
#nullable disable
#nullable restore
#line 18 "/Users/julianfrech/Documents/GitHub/CodeExampleFB/DOTNET/FinanceBro/FinanceBro/_Imports.razor"
using Syncfusion.Blazor.Notifications;

#line default
#line hidden
#nullable disable
#nullable restore
#line 19 "/Users/julianfrech/Documents/GitHub/CodeExampleFB/DOTNET/FinanceBro/FinanceBro/_Imports.razor"
using Microsoft.Extensions.Logging;

#line default
#line hidden
#nullable disable
#nullable restore
#line 1 "/Users/julianfrech/Documents/GitHub/CodeExampleFB/DOTNET/FinanceBro/FinanceBro/Pages/HistoricChart.razor"
using FinanceBro.Data;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "/Users/julianfrech/Documents/GitHub/CodeExampleFB/DOTNET/FinanceBro/FinanceBro/Pages/HistoricChart.razor"
using Blazorise.Charts;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "/Users/julianfrech/Documents/GitHub/CodeExampleFB/DOTNET/FinanceBro/FinanceBro/Pages/HistoricChart.razor"
using Blazorise;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "/Users/julianfrech/Documents/GitHub/CodeExampleFB/DOTNET/FinanceBro/FinanceBro/Pages/HistoricChart.razor"
using System;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/historicChart")]
    public partial class HistoricChart : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 40 "/Users/julianfrech/Documents/GitHub/CodeExampleFB/DOTNET/FinanceBro/FinanceBro/Pages/HistoricChart.razor"
      

    public List<SymbolFacts> symbolFactsDataList { get; set; }
    private int TimeInterval { get; set; } = 14;
    object selectedListValue { get; set; }
    LineChart<double> lineChart;
    List<MarketData> marketDataList;
    List<string> SymbolSelections = new List<string>();
    List<string>
backgroundColors = new List<string>
{ ChartColor.FromRgba(255, 99, 132, 0.2f), ChartColor.FromRgba(54, 162, 235, 0.2f), ChartColor.FromRgba(255, 206, 86, 0.2f), ChartColor.FromRgba(75, 192, 192, 0.2f), ChartColor.FromRgba(153, 102, 255, 0.2f), ChartColor.FromRgba(255, 159, 64, 0.2f) };

    List<string>
        borderColors = new List<string>
            { ChartColor.FromRgba(255, 99, 132, 1f), ChartColor.FromRgba(54, 162, 235, 1f), ChartColor.FromRgba(255, 206, 86, 1f), ChartColor.FromRgba(75, 192, 192, 1f), ChartColor.FromRgba(153, 102, 255, 1f), ChartColor.FromRgba(255, 159, 64, 1f) };

    /// <summary>
    /// Method triggered on page initialization.
    /// sets list of all possible symbols.
    /// </summary>
    /// <returns></returns>
    protected override async Task OnInitializedAsync()
    {
        symbolFactsDataList = await SymbolListService.Get();
        StateHasChanged();
    }




    /// <summary>
    /// Method to ammend new symbols to the list SymbolSelections.
    /// After the selection based on the user input i
    /// </summary>
    /// <param name="SymbolSelectionFromUser"></param>
    private async Task SymbolSelectionListHandler(object SymbolSelectionFromUser)
    {
        if (!(SymbolSelectionFromUser is null))
        {
            if (!SymbolSelections.Contains(SymbolSelectionFromUser.ToString().ToLower()))
            {
                if (SymbolSelections.Count() > 3) { SymbolSelections.RemoveAt(0); }
                SymbolSelections.Add(SymbolSelectionFromUser.ToString().ToLower());
            }

            selectedListValue = SymbolSelectionFromUser;
            StateHasChanged();
        }
        await ChartDataRanderHandler();
    }

    async Task ChartDataRanderHandler()
    {
        await lineChart.Clear();

        await GetMarketData();

        await lineChart.AddLabel(marketDataList.Where(x => x.MarketTimestamp.Hour == 0 && x.MarketTimestamp.Minute == 0 && x.MarketTimestamp > DateTime.Today.AddDays(-TimeInterval)).OrderBy(x => x.MarketTimestamp).Select(x => x.MarketTimestamp.ToShortDateString()).Distinct().ToArray());

        foreach (var item in SymbolSelections)
        {
            await lineChart.AddDatasetsAndUpdate(GetLineChartDataset(item));
        }

    }

    private async Task IntervalSelectionHandler(int _IntervalUserInput)
    {
        this.TimeInterval = _IntervalUserInput;

        await SymbolSelectionListHandler(null);
    }

    async Task GetMarketData()
    {
        marketDataList = await MarketDataService.Get(SymbolSelections);
    }

    LineChartDataset<double> GetLineChartDataset(string symbol)
    {
        return new LineChartDataset<double>
        {
            Label = "Symbol: " + symbol,
            Data = marketDataList.Where(x => x.MarketTimestamp.Hour == 0 && x.MarketTimestamp.Minute == 0 && x.symbol.ToLower() == symbol.ToLower() && x.MarketTimestamp > DateTime.Today.AddDays(-TimeInterval)).OrderBy(x => x.MarketTimestamp).Select(x => (double)x.close).ToList(),
            BackgroundColor = backgroundColors,
            BorderColor = borderColors,
            Fill = true,
            PointRadius = 2,
            BorderDash = new List<int>
            { }
        };
    }







#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IMarketDataListService MarketDataService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private ISymbolFactsDataListService SymbolListService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IJSRuntime JSRuntime { get; set; }
    }
}
#pragma warning restore 1591
